function [Y,Xf,Af] = ANNmass(x,~,~)
%ANNMASS neural network simulation function.
%
% Auto-generated by MATLAB, 10-Feb-2023 15:36:28.
% 
% [Y] = ANNmass(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 4xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Layer 1
b1 = [0.64292068271868885176;-0.98541113479517972173;0.82043283934956956482;-0.56900861268072422394;1.0741369621590275418;0.13067194354023892178;0.32007012819959124172;-0.76903928564288337455;-0.56365558472873422691;-0.53700182400737828115;-0.34081964315848578551;0.92837869592050004108;0.8338033264802906519;0.42931320255280613907];
IW1_1 = [0.01504317672254197949 -0.042347404376782707414 -0.49102114687026066076 -0.091694513920218503888;-0.30987473025849432418 -0.98361164060735761794 -0.53381259310329620682 -0.2182626918797094806;0.78613656785693963869 -0.30272305596642407055 0.058122659732551158751 -0.41467630414222883539;-0.5970016216003929399 0.1292672448612945113 0.99632780704384660275 0.59448302832019672692;0.56522334009660468723 0.46999658269714628123 -0.2290372506473302705 0.33651455796643398033;0.59580243440882418859 -0.16287518004744244715 0.27694867686690827213 -0.42149480693033647416;-0.26056665446625970617 -1.2217614580054809714 0.97290484120861797646 1.3226303527538070259;-0.84541272413301515876 0.36638411990974195653 0.024995687810094979753 0.26025987151751417414;0.035614610311033703671 -0.64291754433824832571 0.53722373337120532533 1.4072871169717342532;-0.02695992227729718943 0.41185298393589986343 -0.38238455192588788334 0.87315379713152363461;0.14581658091615862238 -0.30227831017242229317 0.22616773392313385682 0.87048323578690767199;0.5609423389375579605 0.96718478038202293501 0.3459896700177316764 -0.36156847861253299525;-0.24642320755538366095 -0.49055642736773641399 0.65906224288510473208 0.068981007668700827784;-1.4298887654977072703 0.4683226143335113556 0.0026432385375277749062 -0.10203214814983047054];

% Layer 2
b2 = -0.26284328862168754304;
LW2_1 = [-0.24631020404308962002 -0.14785844342014065056 -0.45793624110398994942 0.016647322969882492882 0.83761781579360861105 0.087739323271558783413 -0.0031884806511903347748 0.67730570274573453915 -0.085473038665182951568 0.21635512480277641068 -0.07799880987500858176 -0.27338977019222121534 0.24152339036032771658 0.057056651966951754673];

% ===== SIMULATION ========
%%%%%%%%%%%%%%%%%%%%%%%%%% transpose output, not original code %%%%%%%%%%%%
X=x';
%%%%%%%%%%%%%%%%%%%%%%%%%% transpose output, not original code %%%%%%%%%%%%
% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    % no processing
    
    % Layer 1
    a1 = poslin_apply(repmat(b1,1,Q) + IW1_1*X{1,ts});
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = a2;
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
%%%%%%%%%%%%%%%%%%%%%%%%%% transpose output, not original code %%%%%%%%%%%%
Y(1,:)= ((Y(1,:))*(6.23578-1.81576))+1.81576; %mass
Y=Y';
%%%%%%%%%%%%%%%%%%%%%%%%%% transpose output, not original code %%%%%%%%%%%%
end

% ===== MODULE FUNCTIONS ========

% Linear Positive Transfer Function
function a = poslin_apply(n,~)
  a = max(0,n);
  a(isnan(n)) = nan;
end
