function [Y,Xf,Af] = tanh_8(X,~,~)
%TANH_8 neural network simulation function.
%
% Auto-generated by MATLAB, 17-Apr-2023 14:11:02.
% 
% [Y] = tanh_8(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 4xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Layer 1
b1 = [6.6358670768214080837;14.341938298874911339;2.5684707803100570445;-0.80953336191214353423;-3.4678495331011074398;3.4268616827216615839;1.2408025172860597252;0.74660608906718761713];
IW1_1 = [-1.1402971396828758266 -2.5809289939006463399 1.7349986335650235958 -1.8789725699928983005;-7.0837761326142905105 -4.827707394762510873 -2.2121036537006597555 -9.6442754081939039423;-21.802509781683529155 19.03438066851383681 0.36016278334731383071 -1.8546000537673044128;-2.8677527455344220542 7.3201490843780874229 -2.6633514791717010084 1.8981222470805765301;4.8301117669611901562 3.9075358853324915209 1.6719819752219002851 -2.6154357736818627522;-0.37540093979094923959 -1.2456964508407610825 8.8474073871468519314 -6.6252100163615894601;0.91932237825011486887 0.10727005983797681388 0.3251011641853288614 -1.1360494160072140968;0.030484537405161622053 -0.47805088353121560907 0.69055326954773310622 -1.4185484924007618623];

% Layer 2
b2 = -0.84144438310805336201;
LW2_1 = [-0.84657056190955615183 0.23299630638120161219 0.10060764337278300939 -0.10857620756796146355 0.10441166442873769937 -0.16814294320220318779 3.09361176505633928 -1.6120733787370657986];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    % no processing
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*X{1,ts});
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = a2;
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end
