function [Y,Xf,Af] = logsig144(x,~,~)
%LOGSIG144 neural network simulation function.
%
% Auto-generated by MATLAB, 21-Nov-2022 20:26:21.
% 
% [Y] = logsig144(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 4xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Layer 1
b1 = [-8.1871588228723712888;-3.8052634651351722184;5.6698103749105248639;6.8770512249766051482;-4.6547932347343117243;1.8251670898432963419;7.748801050328375517;1.2935566444666424246;1.2968127970247145253;-1.4481673813322029076;2.9397763622336690048;-1.1153836109857584447];
IW1_1 = [2.9481667935124100666 2.1583116140243623349 -0.0325968052400477451 5.9992781444009377623;5.6040473841086866358 3.0825184640628546795 -5.97805734424647639 -6.2862893146290703683;-6.2209948486613715346 4.8755509502864997629 -1.126420130680586329 -0.27556836073560453393;-11.21530571998665593 -4.9699615163589028199 -1.926323812189861151 1.5238827219408519476;-3.5780138704655488624 5.5774944453373436204 6.7467447916277318853 1.5961511878213261451;-4.7429406831318559057 5.5839816522069041227 -8.875363299452798671 1.3213679975236134467;-5.053953048145585214 -1.889773101450276549 3.6679506179196046389 -14.230384399169832221;1.8078321630074851711 -0.8534250007399060145 0.055288810884644788712 0.0021954631253193091119;-0.79601088215494164579 0.45064202963893146281 -0.044020413586556186858 12.80709105239361989;8.1051570135014010532 -4.4282655253449600963 4.3107113920089457082 3.2367957024608391414;4.869518636570355774 -5.1113557324911997881 -2.8189448684545279633 7.8905429256361134804;-12.452674589103482461 1.5478178105171482848 0.29463218805446750315 0.027068420969792825193];

% Layer 2
b2 = [1.9989101800695565636;0.11255668849758745931];
LW2_1 = [0.0056768030596926460224 -0.0055575578781865368067 0.074184257135019415763 -0.005917600482469973118 0.0080677917083725233377 -0.014625334113557944549 -0.0013721822004150268075 -2.0896418294096994472 -0.00074987491837675765427 -0.0046578167732068548323 -0.0023690004787411478651 0.33164328234506523785;-0.58183405225563911145 0.02196588799305911055 -0.25766353106699535491 -0.099644716055072746208 0.041838670880130129914 -0.07350950522970675638 -0.43475536397198122351 -0.21673522155973098946 0.9781296049468437559 0.056180060124724331971 0.16893745972596005411 0.047433686559679416606];

% ===== SIMULATION ========
%%%%%%%%%%%%%%%%%%%%%%%%%% transpose output, not original code %%%%%%%%%%%%
X=x';
%%%%%%%%%%%%%%%%%%%%%%%%%% transpose output, not original code %%%%%%%%%%%%
% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    % no processing
    
    % Layer 1
    a1 = logsig_apply(repmat(b1,1,Q) + IW1_1*X{1,ts});
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = a2;
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
%%%%%%%%%%%%%%%%%%%%%%%%%% transpose output, not original code %%%%%%%%%%%%
Y(1,:)= ((Y(1,:))*(163.2073517-37.10995))+37.10995; %IPF
Y(2,:)= ((Y(2,:))*(2435.154665-729.5885))+729.5885; %SEA
Y=-1.*Y'; %%%% times -1 due to the minimizing ObjFn %%%%%
Y(:,1)=-1.*Y(:,1);
%%%%%%%%%%%%%%%%%%%%%%%%%% transpose output, not original code %%%%%%%%%%%%
end

% ===== MODULE FUNCTIONS ========
% Sigmoid Positive Transfer Function
function a = logsig_apply(n,~)
  a = 1 ./ (1 + exp(-n));
end
