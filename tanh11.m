function [Y,Xf,Af] = tanh11(X,~,~)
%TANH11 neural network simulation function.
%
% Auto-generated by MATLAB, 17-Apr-2023 11:17:26.
% 
% [Y] = tanh11(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 8xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Layer 1
b1 = [-2.451045893371452955;4.3718500126912234194;-3.5593836667735829771;-2.5528903026121252395;-5.4676981854634041369;2.4998138682978714442;-0.65217466377738320116;4.3346075848200609215;-1.4734176616967948892;-3.1867782849555643665;-2.5683558651982396626];
IW1_1 = [1.6719010933444886646 -1.1352454221128116529 -0.36575396080624295037 -1.6790547217601168306 2.0074081405349022411 -1.5184970732568001672 0.50593632765008367258 -0.31498950642705292324;0.91594458171881754094 0.50574730740532714002 0.62767926070848856224 -0.56909621189628323279 -0.18519152619275436322 -3.0494778040811842956 0.54877799086502354609 -3.6012777704702636505;0.029202706092975205809 0.040937593179872257265 0.68733651996859490563 -2.3822839779457862797 -0.99840522042079304921 1.5580670712543198686 2.3472728101906801257 1.5263866243121928523;-0.76454185684806386103 2.6788291844135696529 1.5099056882989956296 2.2086302357624343351 -2.7534739384686832686 1.5861026144250491843 -0.1113733469450394753 1.982612819364487633;0.78577220094898536651 -0.29279912200025687286 0.71644686364330567585 0.039892830532062516224 0.80345990842171544077 1.3337180792267595564 -0.05421569091855985012 2.8797389391975896089;-0.52619873680975948194 -0.94552940530681017783 1.0734982016202418986 1.0512739151916183911 -0.33818914021739193698 -0.56981902572014131447 -1.5025818714192882286 -2.5141160560493833742;0.096893847086546511238 -2.0821001252672255433 -0.90541289958560156048 1.5071821036917134595 1.0643478958749028607 0.90994570845229993949 0.39363653196034126269 0.93634868700337714476;0.43663349835425013801 -2.1437690037721899294 -0.50921617332160507008 -3.1228628944577216942 0.65774156913210957143 -0.23228000171838303345 -3.2863811131066156257 -0.48685130517447322562;-0.58307359791529056459 2.8133292752345329113 1.3876994444089338909 1.2068899318762791317 -2.4132749574873586518 0.17913662103749772303 -0.71481551544011678878 1.0378872906738301207;0.58707163358330316516 1.1402704032619270791 -1.1982877089273360482 -2.3369146542331638017 -0.24935504150411547108 1.2991701866265161769 1.8155157987912051709 2.7456176436419084119;0.24432398757622722507 0.30352160722189819309 -0.69612331029349328038 1.0389398332776729195 0.75335911642437070057 -0.0075957777480642908047 -2.4615971360424184766 2.7448515349673301422];

% Layer 2
b2 = -0.60559011683071506393;
LW2_1 = [-0.30850403045129776158 1.670580609188290877 -0.94224814816318935851 0.63777408688470205167 0.91297559872824041172 -1.6921394716998940932 -0.26799540441391833667 -0.30208332802041903964 -0.73629804509119389788 -1.7993593046399163349 1.2887983235075166633];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    % no processing
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*X{1,ts});
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = a2;
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end
