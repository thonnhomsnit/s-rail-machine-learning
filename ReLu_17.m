function [Y,Xf,Af] = ReLu_17(X,~,~)
%RELU_17 neural network simulation function.
%
% Auto-generated by MATLAB, 17-Apr-2023 13:56:55.
% 
% [Y] = ReLu_17(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 5xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Layer 1
b1 = [-0.031950644599951255609;0.57081947509658681472;0.81730595884627132985;-0.12903388759893161253;-1.0180690475077927015;0.70779727012060134061;-0.98183518113411061279;0.53729332043347455272;-0.041666599003857537897;0.66442120212566135873;-0.36993056345551039721;0.64190590146822279483;-0.25861767876011443335;0.88092788142716238475;0.98205841797771675772;1.1001393616323831282;-0.65617949282451260018];
IW1_1 = [-0.74762133599206648249 0.30769957099868050499 0.83065641201876072586 -0.74975856312431066186 0.25829014831887808779;0.27252557628807028145 -1.4578221117071838986 -0.5953006977123460608 0.5178925419852955514 -1.1208620284355901298;0.32532751557226213812 0.40797553913143186355 -0.2962511440717130462 0.026693115304976641061 -0.81536329097159343515;0.71235671722354820812 0.32170407889248336941 0.15512803517649742524 -0.52188855790322019601 -0.37519134015941651983;-0.60758170329485094996 0.72989271181968362612 0.64322202272444495286 -0.76048636495524613022 0.24511141772256500593;-0.4664509220785619803 -0.66194650540347999002 -1.1580037126745930109 0.13026954976603186132 0.32966483584276451424;0.74049943045601551717 -0.71129028373407265917 0.5853200279511237003 -0.39390087368358095432 -0.56639475896885738138;-0.46943155690890220333 0.26022654655222632325 -0.94678861578367490281 -0.98244412589252294588 0.7503150858325149386;0.64727852860098145094 0.529811240157715857 -0.1633139390362088883 -0.2722969229188893503 0.078461235787215852233;-0.35961714494465074621 0.39333188574117072811 -0.54153334479651638045 0.69929845820319136429 -0.036064691544276106239;-0.24679045142601196972 0.10896487320321886216 0.70055586720837748071 0.23405311182013593951 0.66454055215494489683;0.52381878645728729982 0.40573578829018158709 0.1695349430099405974 0.88734544428131112426 0.15679845250961532699;-0.74435560226969199604 0.67854127979102563106 0.16985968499212844574 -0.87876572822524956496 0.3994348009280182521;-0.51359683726371707646 -0.22420552554792316791 0.49188851492383950381 -0.7814745594886246538 -0.0045949881484602305912;-0.79821646331856555001 0.64182962515021457772 -0.58657616920198807353 0.26249190011145423496 -0.8726242115605455929;-0.43237719948212699483 0.6211684837834601236 -0.10795648678809935395 0.47676050244463219485 0.18755673303889799919;0.91963048078782949624 0.3086594459622228892 -0.94333247451838497799 0.51309550102938850102 0.5326786608395633893];

% Layer 2
b2 = -0.58281383459405633474;
LW2_1 = [0.22046884676118488899 -0.55372552887454218329 -0.071879168903485918252 -0.87898475429974565198 0.781983671224811272 0.62057577755477999482 0.025965710797519969688 -0.54116916256659153284 0.69672850789593121501 -0.63396696637239735583 -0.92798512779673014705 0.38565802781476377081 0.053637379602386944799 -0.33641616279543523627 -0.22937292252906726908 0.94720726076881534006 0.69932728547504940941];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    % no processing
    
    % Layer 1
    a1 = poslin_apply(repmat(b1,1,Q) + IW1_1*X{1,ts});
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = a2;
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Linear Positive Transfer Function
function a = poslin_apply(n,~)
  a = max(0,n);
  a(isnan(n)) = nan;
end
