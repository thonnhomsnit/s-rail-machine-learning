function [Y,Xf,Af] = tanh_10(X,~,~)
%TANH_10 neural network simulation function.
%
% Auto-generated by MATLAB, 17-Apr-2023 13:54:36.
% 
% [Y] = tanh_10(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 5xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Layer 1
b1 = [-0.19504915465959668519;1.4256088338002301796;2.8732870854730236942;3.855178075560560913;-1.7710704371452103967;-3.1714546348655150432;1.1235675275797438744;0.61869623642602800118;2.5417340064907412156;-0.72367168535534165397];
IW1_1 = [0.46523298306126537049 -0.23420217566763673611 -0.43477911567291427364 0.25875762696640819405 -0.82444001023610435919;4.5578921533765255347 1.7086960866982796592 -4.3639451011364709387 -4.0167106072970977237 -2.6959670445867831567;-1.8106993480267064012 -0.27069077598431379172 -3.171719993153777839 3.0727527888424277513 0.2505079916670134299;-1.3540347973442596885 -0.48906548166140639822 -1.7548053480023777517 0.52113347713243607373 -5.8923553197028377681;3.5576511619248369911 3.3589612699342463742 -5.1600849342264822894 0.13289947185344061498 -0.7624484876916201026;0.70990242778902368226 0.26709859992861234579 1.3403489332016307323 -0.24297401024837608774 5.2393385429872934012;-2.5495919471547634494 -1.3869911358720452554 3.2588740758647962714 -0.22121960645446125948 0.67451755326449946981;1.5883213408549163859 2.380642355382746711 4.818349600505776209 0.26347773036712252015 -4.5712932581325684822;-1.8351788418853509643 -1.6620753174142897102 3.3871299262843486133 -6.5826430296437941081 -2.6097506555561684749;-7.638987583086968236 -0.62617099982336155151 3.3978398340502495856 -0.77524140986892842164 1.3795265750395502291];

% Layer 2
b2 = -0.57452159752789599967;
LW2_1 = [-2.0371835165231075848 -0.23580967090906487793 0.25041611943033248444 -1.5954375798937674436 -1.5109662713019766933 -1.9076893023028174134 -2.5455409966116571141 0.2329754617863784294 -0.11807588389977376198 -0.20169743771719592096];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    % no processing
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*X{1,ts});
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = a2;
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end
