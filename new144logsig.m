function [Y,Xf,Af] = new144logsig(x,~,~)
%NEW144LOGSIG neural network simulation function.
%
% Auto-generated by MATLAB, 20-Nov-2022 18:18:31.
% 
% [Y] = new144logsig(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 4xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Layer 1
b1 = [12.971236282998615863;-7.6898348542768406588;-10.543130122868223708;-8.795985044675660447;-1.6054339315642018882;1.1152501779521670766;2.6457311696621381714;-4.2314058741436282318;3.315784786771243553;9.5564961637016434537;-2.1796068632531255815;-5.3444896257743810253];
IW1_1 = [-4.3085852809683746756 3.1616348940400493817 1.0056675188548753752 -6.9637561962183704978;8.3984595442730185511 -6.104246884605838197 2.0158384093692052197 0.86738986114372595981;5.0711526302409373201 7.5924381404445089316 -0.14318853694871613857 3.3471450201737789065;1.9287638244661176046 3.8312586592406256969 7.4097145377998243632 4.0899172046248288837;5.2273467561536826054 -3.7822619224085691769 -1.3983459093424537301 3.1124203741138334323;5.4926776991326216049 -8.4158892980239183856 -0.4435179463605808392 1.5793983207658826018;-8.6892040473640204112 2.5124104578335475502 -1.4000041317423754794 0.59259258120249447277;2.8018322534404136448 0.91070609236621935523 -0.94558669453264132532 7.1591959325602738673;5.1378968097502859536 -4.554560967726892784 -3.5925233453915699222 -1.5463917725024696193;-1.4824674042535834761 -2.5184768906352390516 0.60510289702373920573 -10.622832905338478682;-8.7262909595190372158 2.6148907542812893645 0.62529552935053489549 0.14044647063260140563;-9.2657096604212156876 2.9462983161650191377 4.3391615086049384331 0.14252354779408402119];

% Layer 2
b2 = [0.19896984867849304424;-0.44879133370122203939];
LW2_1 = [0.051032474398253035996 -0.11099140265155688079 -0.0095297417564743358565 0.014830137159764888999 -0.0866697950717775778 -0.023594922923245373325 0.20815960069029132429 0.016425395462679633074 -0.045235248705557486171 -0.0033738822942764694346 0.80106352791392265722 0.076409374061306711834;0.047373973092481584668 0.12985489403822292331 -0.21187412526241738986 0.034997652440758864056 -0.22347094877969717053 0.11596608518753281913 -0.038094590978548309446 1.0681892811020885503 -0.034360425202141803291 0.46972847858949307032 0.012560871524287312712 0.02875755125655625466];

% ===== SIMULATION ========
%%%%%%%%%%%%%%%%%%%%%%%%%% transpose output, not original code %%%%%%%%%%%%
X=x';
%%%%%%%%%%%%%%%%%%%%%%%%%% transpose output, not original code %%%%%%%%%%%%
% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    % no processing
    
    % Layer 1
    a1 = logsig_apply(repmat(b1,1,Q) + IW1_1*X{1,ts});
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = a2;
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
%%%%%%%%%%%%%%%%%%%%%%%%%% transpose output, not original code %%%%%%%%%%%%
Y(1,:)= ((Y(1,:))*(163.207-37.1100))+37.1100; %IPF
Y(2,:)= ((Y(2,:))*(2435.1150-729.5885))+729.5885; %SEA
Y=-1.*Y'; %%%% times -1 due to the minimizing ObjFn %%%%%
Y(:,1)=-1.*Y(:,1);
%%%%%%%%%%%%%%%%%%%%%%%%%% transpose output, not original code %%%%%%%%%%%%
end

% ===== MODULE FUNCTIONS ========

% Sigmoid Positive Transfer Function
function a = logsig_apply(n,~)
  a = 1 ./ (1 + exp(-n));
end
