function [Y,Xf,Af] = ReLu_14(X,~,~)
%RELU_14 neural network simulation function.
%
% Auto-generated by MATLAB, 17-Apr-2023 14:28:48.
% 
% [Y] = ReLu_14(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Layer 1
b1 = [0.83409302037198185253;0.12422524539913412656;-0.71168425868604512363;0.45527172216677447292;-0.15990395238020330138;0.60803142052650294147;-1.0753135786991641076;-0.38832588978358750786;-0.81126325094732010257;-0.19620022437909090396;0.59679302042882265145;-0.21050448810407934586;0.2260207510184479851;0.93314939080975300989];
IW1_1 = [-0.091903339164534844641 0.53637918583405908013 0.27888026638298468729 -0.16963413500526314248 -0.45945968018597727056 -0.68776796885749769128 0.075063731243734846399;-0.081134419523346282266 0.46337687512453112904 -0.12569389525099985971 -1.156234308092930263 -0.89786070666529405049 0.49084913866025076112 0.3940852295245386161;0.25853785737452683602 0.39884926488812499912 0.016203324045467266956 0.69150999504218790825 -0.2770004996505943673 -0.52470546650980498526 -0.95134201639519622162;1.4717302716806359708 0.14620897382246270113 0.017389194748545833136 0.23924732555001168577 -0.61981808555053197196 -0.24787157098505230302 -0.57645417246231400732;-0.16413219488167840598 -0.40387723193946939437 -1.2324933901269536918 0.056150388921146522636 -0.89491780060092396276 -0.43591699690543272983 1.1445876183503460588;-0.57219177338070248418 -0.72729139025225009174 -0.15016466957201113352 -0.50009006988423543305 0.46191104818511530272 0.75974060889434624766 1.3374854011199557302;0.9846386338673221994 0.48984960093059537467 -0.54655242457396024935 0.25995090341971183179 -0.97418106916055791089 0.15067668834220923624 1.9360269325411312291;0.38276013953924337141 -0.50047545601756926459 -0.39061609015034809422 -0.25827040778698778789 1.0924664642490844457 -0.71581850777558564403 0.007712891210256180019;0.044900197838531434591 -0.18773290440355119846 0.45213153137962919237 -0.78339422069451936093 0.6175200856996890808 0.19032317428455444719 0.3129447834337837353;-0.73744186814614554049 2.0155083349317837182 0.240520375016848309 0.30105948709578495004 -0.64908707982850055718 -0.31019803043927224317 0.0678396305941886546;-0.70633106778129617354 1.204337558005746267 -0.21486551336482054286 -1.072264091215798798 -1.4567316069510833909 0.1777169292801778766 0.34493687821532398319;0.44663402250484685041 0.90225981232291230238 -1.0022561897543933451 0.21822753218140408804 -0.48183693964943707932 0.21025504080336163137 -1.3135716587706087743;0.094927530494794146176 -1.1764144569349026526 0.78023852224205503259 0.38660036208817977199 -0.56124519473520151358 0.15593993690114604789 0.23526073258736682203;0.80666077979989836422 0.26736034078860565488 -0.3316957397504410876 -0.55573237306856348994 -0.94044378825703844882 -0.29408085489753643671 -0.72420771505234482479];

% Layer 2
b2 = 0.31927327972729119265;
LW2_1 = [0.13447364047363430384 -0.67165104520040253 0.74892834724952261904 1.0323086704019899251 -0.94035553708016672569 -0.0859597205460337771 0.78583253042047118697 -0.44328238605318021071 0.034768323387011718095 -0.5890809640075137521 0.85706751923203783328 0.59811706858815150145 -0.52146989512700514524 -1.1733602919506749274];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    % no processing
    
    % Layer 1
    a1 = poslin_apply(repmat(b1,1,Q) + IW1_1*X{1,ts});
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = a2;
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Linear Positive Transfer Function
function a = poslin_apply(n,~)
  a = max(0,n);
  a(isnan(n)) = nan;
end
