function [Y,Xf,Af] = logsig81(x,~,~)
%LOGSIG81 neural network simulation function.
%
% Auto-generated by MATLAB, 21-Nov-2022 20:25:54.
% 
% [Y] = logsig81(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 4xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Layer 1
b1 = [10.152494291110338409;-1.1015152279476130293;-6.3205206261675357382;-1.1624081227082720957;-1.9775402243133066715;-2.5890593016807366133];
IW1_1 = [-1.1592778394701368505 -1.5661787774671356299 1.5630993253461125114 -9.997013403865366854;0.59905701857392368304 -1.1554553198971559969 -1.4097556688359615951 5.4917531394948868595;3.3375351776104573709 2.6484195385543602974 -1.0496643788273618547 8.2842826693948303785;-1.8176639813339503515 0.71661491731256810045 0.024821030647218102899 -0.017059436416437319395;0.84614895409908363888 -0.18259186952974326701 4.2967387418219598061 7.4321372076575142884;-5.1694047541917083066 4.7733288331668797255 -5.4320008281931198013 -0.76196693522597869208];

% Layer 2
b2 = [-0.10910967740283351868;-0.83511594452806936495];
LW2_1 = [0.0049574470025003057605 -0.045702210948677587932 0.049526634233728564216 2.7941183002440634908 0.0047284660430176699009 -0.0010519277174953966733;0.64768437955234825498 0.58500123065709208614 0.32445212787148092204 0.11131732089344230363 0.26875902381084398884 0.11578892496417643454];

% ===== SIMULATION ========
%%%%%%%%%%%%%%%%%%%%%%%%%% transpose output, not original code %%%%%%%%%%%%
X=x';
%%%%%%%%%%%%%%%%%%%%%%%%%% transpose output, not original code %%%%%%%%%%%%
% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    % no processing
    
    % Layer 1
    a1 = logsig_apply(repmat(b1,1,Q) + IW1_1*X{1,ts});
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = a2;
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
%%%%%%%%%%%%%%%%%%%%%%%%%% transpose output, not original code %%%%%%%%%%%%
Y(1,:)= ((Y(1,:))*(163.2073517-65.22771454))+65.22771454; %IPF
Y(2,:)= ((Y(2,:))*(2217.028012-729.5885))+729.5885; %SEA
Y=-1.*Y'; %%%% times -1 due to the minimizing ObjFn %%%%%
Y(:,1)=-1.*Y(:,1);
%%%%%%%%%%%%%%%%%%%%%%%%%% transpose output, not original code %%%%%%%%%%%%
end

% ===== MODULE FUNCTIONS ========
% Sigmoid Positive Transfer Function
function a = logsig_apply(n,~)
  a = 1 ./ (1 + exp(-n));
end
